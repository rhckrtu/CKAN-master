#!/bin/sh
set -e

arg0=""
remainingArgs=""

if [ $# -gt 0 ]; then
    arg0="$1"
fi

if [ $# -gt 1 ]; then
    skippedFirst=false
    for i in "$@"; do
        if $skippedFirst; then
            remainingArgs="$remainingArgs $i"
        else
            skippedFirst=true
        fi
    done
fi

nugetVersion="6.8.0"
useExperimental=false
rootDir=$(dirname $0)
scriptFile="$rootDir/build.cake"
buildDir="$rootDir/_build"
toolsDir="$buildDir/tools"
nugetExe="$toolsDir/NuGet/$nugetVersion/nuget.exe"

nugetDir="$(dirname $nugetExe)"
if [ ! -d "$nugetDir" ]; then
    mkdir -p "$nugetDir"
fi

if [ ! -f "$nugetExe" ]; then
    curl -L "https://dist.nuget.org/win-x86-commandline/v${nugetVersion}/nuget.exe" --output "$nugetExe"
fi

# dotnet tool install idiotically returns failure if already installed,
# so we have to ignore all errors from it
# https://github.com/dotnet/sdk/issues/9500
set +e
dotnet tool install --global Cake.Tool
set -e

cakeArgs=""

if [ -n "$arg0" ]; then
    case $arg0 in
        -*)
            cakeArgs="$cakeArgs $arg0"
            ;;
        *)
            cakeArgs="$cakeArgs --target=$arg0"
            ;;
    esac
fi

if $useExperimental; then
    cakeArgs="$cakeArgs --experimental"
fi

export PATH="$PATH:$HOME/.dotnet/tools"
dotnet cake --verbosity Minimal "$scriptFile" $cakeArgs $remainingArgs
exit $?
